{"title":"Test dapp","subtitle":"Test dapp","author":"Willy","description":"This is a test dapp to make sure it launches and works well within dappy","cssLibraries":["bulma@0.x"],"jsLibraries":["react@16.7.0","react-dom@16.7.0","react-redux@6.0.0"],"js":"const isReactLoaded = document.getElementsByClassName(\"is-react-loaded\")[0];\nisReactLoaded.innerHTML = \"React is loaded\";\nisReactLoaded.setAttribute(\"style\", \"color: #6A6;\");\n\nconst isJavascriptEvaluated = document.getElementsByClassName(\n  \"is-javascript-evaluated\"\n)[0];\nisJavascriptEvaluated.innerHTML = \"javascript is correctly evaluated\";\nisJavascriptEvaluated.setAttribute(\"style\", \"color: #6A6;\");\n\nalert(\"This alert should not pop\");\n\ntry {\n  window.parent.document;\n} catch (e) {\n  const isAccessingParentContext = document.getElementsByClassName(\n    \"is-parent-context-blocked\"\n  )[0];\n  isAccessingParentContext.innerHTML = \"parent context is blocked\";\n  isAccessingParentContext.setAttribute(\"style\", \"color: #6A6;\");\n}\n\nconst form = document.getElementById(\"form\");\nform.submit();\n\nwindow.open(\"https://rchain.coop/\");\n","css":"html,\nbody {\n  height: 100vh;\n  background: #55f;\n  padding: 30px;\n}\nul {\n  list-style: inherit;\n}\n","html":"<h4 class=\"title is-3\">Dappy test dapp</h4>\n<br />\n<p>\n  This dapp has been built to check that dapps loaded in dappy work fine and\n  that the dangerous behaviours are blocked by the \"sandboxed\" attribute on the\n  iframe tag in which dapp code is executed.\n</p>\n<br />\n<br />\n<ul>\n  <li>\n    Dapp local css should be evaluated, make sure the background is light grey\n    and not white\n  </li>\n  <li>\n    Dapp local javascript should be evaluated :\n    <span style=\"color: #e55\" class=\"is-javascript-evaluated\"\n      >javascript has not been evaluated</span\n    >\n  </li>\n  <li>\n    Bulma css library should be loaded, make sure this button is nice :\n    <button class=\"button is-primary is-small\">Nice button</button>\n  </li>\n  <li>\n    React javascript library should be loaded :\n    <span style=\"color: #e55\" class=\"is-react-loaded\">React is not loaded</span>\n  </li>\n  <li>Javascript alert() should be disabled: make sure you didn't see one</li>\n  <li>\n    Form submission should be blocked: make sure you were not taken to w3c.org\n  </li>\n  <li>\n    Javascript should not be able to access parent context (Dapp main context):\n    <span style=\"color: #e55\" class=\"is-parent-context-blocked\"\n      >parent context is not blocked</span\n    >\n  </li>\n  <li>\n    Javascript popups should be disabled (window.open): make sure a tab/window\n    was not openned\n  </li>\n</ul>\n\n<form style=\"display:none;\" id=\"form\">\n  <input name=\"hello\" value=\"hello\" />\n</form>\n","version":"0.1"}